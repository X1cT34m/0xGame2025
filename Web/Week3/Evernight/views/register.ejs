<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: #000;
            overflow: hidden;
            height: 100vh;
            color: #0f0;
        }

        #binaryCanvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

        .register-container {
            position: relative;
            z-index: 2;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .register-form {
            background: rgba(0, 0, 0, 0.85);
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 0 40px rgba(0, 255, 0, 0.4);
            border: 1px solid rgba(0, 255, 0, 0.6);
            width: 380px;
            backdrop-filter: blur(15px);
            text-align: center;
        }

        .logo-container {
            margin-bottom: 30px;
        }

        .logo {
            width: 120px;
            height: 120px;
            background: linear-gradient(45deg, #00ff00, #008000);
            border-radius: 50%;
            margin: 0 auto;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 40px;
            font-weight: bold;
            color: #000;
            border: 3px solid #0f0;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
        }

        .register-form h2 {
            color: #0f0;
            margin-bottom: 30px;
            font-size: 32px;
            text-shadow: 0 0 15px rgba(0, 255, 0, 0.6);
        }

        .form-group {
            margin-bottom: 25px;
            text-align: left;
        }

        .form-group label {
            display: block;
            color: #0f0;
            margin-bottom: 8px;
            font-size: 15px;
            font-weight: bold;
        }

        .form-group input {
            width: 100%;
            padding: 15px;
            background: rgba(0, 20, 0, 0.6);
            border: 1px solid rgba(0, 255, 0, 0.4);
            border-radius: 8px;
            color: #0f0;
            font-size: 16px;
            outline: none;
            transition: all 0.3s;
        }

        .form-group input:focus {
            border-color: #0f0;
            box-shadow: 0 0 15px rgba(0, 255, 0, 0.4);
            background: rgba(0, 30, 0, 0.8);
        }

        .form-group input::placeholder {
            color: rgba(0, 255, 0, 0.4);
        }

        .register-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(45deg, #00ff00, #008000);
            border: none;
            border-radius: 8px;
            color: #000;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
            text-transform: uppercase;
            letter-spacing: 2px;
            margin-top: 10px;
        }

        .register-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 255, 0, 0.5);
        }

        .register-btn:active {
            transform: translateY(0);
        }

        .error-message {
            color: #ff4444;
            margin-top: 20px;
            font-size: 14px;
            min-height: 20px;
        }

        .success-message {
            color: #44ff44;
            margin-top: 20px;
            font-size: 14px;
            min-height: 20px;
        }

        .loading {
            color: #0f0;
            margin-top: 20px;
        }

        .loading-spinner {
            border: 3px solid rgba(0, 255, 0, 0.3);
            border-top: 3px solid #0f0;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            animation: spin 1.5s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .music-control, .volume-control {
            display: none !important;
        }

        a.back-link {
            display: block;
            margin-top: 20px;
            color: #0f0;
            text-decoration: none;
            font-size: 14px;
        }

        a.back-link:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <canvas id="binaryCanvas"></canvas>
    
    <div class="register-container">
        <form class="register-form" method="POST" action="/register">
            <div class="logo-container">
                <div class="logo"></div>
            </div>
            <h2>Register</h2>

            <div class="form-group">
                <label for="username">Username</label>
                <input 
                    type="text" 
                    id="username" 
                    name="username" 
                    placeholder="Choose a username" 
                    required
                >
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    placeholder="Create a password" 
                    required
                >
            </div>

            <button type="submit" class="register-btn">Register</button>

            <div class="loading" id="loading" style="display: none;">
                <div class="loading-spinner"></div>
                <div>Processing...</div>
            </div>
            <% if (locals.message) { %>
                <div class="error-message"><%= locals.message %></div>
            <% } %>

            <a href="/login" class="back-link">← Back to Login</a>
        </form>
    </div>

    <audio id="backgroundMusic" loop>
        <source src="/vedioes/42.mp3" type="audio/mpeg">
    </audio>

    <script>
        class BinaryRain {
            constructor() {
                this.canvas = document.getElementById('binaryCanvas');
                this.ctx = this.canvas.getContext('2d');
                this.resize();
                this.chars = '01';
                this.fontSize = 16;
                this.columns = Math.floor(this.canvas.width / this.fontSize);
                this.drops = [];
                this.speed = 1;
                this.init();
                window.addEventListener('resize', () => this.resize());
            }

            resize() {
                this.canvas.width = window.innerWidth;
                this.canvas.height = window.innerHeight;
                this.columns = Math.floor(this.canvas.width / this.fontSize);
                this.init();
            }

            init() {
                this.drops = [];
                for (let i = 0; i < this.columns; i++) {
                    this.drops[i] = Math.floor(Math.random() * -200);
                }
            }

            draw() {
                this.ctx.fillStyle = 'rgba(0, 0, 0, 0.03)';
                this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);

                this.ctx.fillStyle = '#0f0';
                this.ctx.font = `bold ${this.fontSize}px monospace`;
                this.ctx.shadowColor = '#0f0';
                this.ctx.shadowBlur = 5;

                for (let i = 0; i < this.drops.length; i++) {
                    const text = this.chars[Math.floor(Math.random() * this.chars.length)];
                    const x = i * this.fontSize;
                    const y = this.drops[i] * this.fontSize;

                    const alpha = 0.3 + Math.random() * 0.7;
                    this.ctx.globalAlpha = alpha;
                    this.ctx.fillText(text, x, y);

                    if (y > this.canvas.height && Math.random() > 0.99) {
                        this.drops[i] = 0;
                    }

                    this.drops[i] += this.speed * 0.3;
                }
                
                this.ctx.globalAlpha = 1;
                this.ctx.shadowBlur = 0;
            }

            animate() {
                this.draw();
                requestAnimationFrame(() => this.animate());
            }
        }

        const binaryRain = new BinaryRain();
        binaryRain.animate();

        const backgroundMusic = document.getElementById('backgroundMusic');

        window.addEventListener('load', function() {
            backgroundMusic.volume = 0.3;
            
            const playPromise = backgroundMusic.play();
            if (playPromise !== undefined) {
                playPromise.catch(error => {
                    console.log('音频自动播放被阻止:', error);
                });
            }
        });

        document.addEventListener('click', function initAudio() {
            backgroundMusic.play().catch(e => console.log('播放失败'));
            document.removeEventListener('click', initAudio);
        });

        // 在所有 JS 最后加上：
        document.querySelector('form').addEventListener('submit', function(e) {
            const submitBtn = this.querySelector('.register-btn');
            submitBtn.disabled = true;
            submitBtn.textContent = 'Registering...';
        });
    </script>
</body>
</html>